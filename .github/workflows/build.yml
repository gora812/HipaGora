name: Build

# Controls what will trigger the workflow.
# Change it to your needs.
on:
  # A new push to the "main" branch.
  push:
    branches: [ "main" ]
  # A new pull request to the "main" branch.
  pull_request:
    branches: [ "main" ]
  # Allows to trigger the workflow from GitHub interfaces.
  workflow_dispatch:

# A single workflow can have multiple jobs.
jobs:
  # 'A new job is defined with the name: "build_android"
  build_android:
    # Defines what operating system will be used for the actions.
    # For android, we will use Linux GitHub-Hosted Runner.
    runs-on: ubuntu-22.04
    # Defines what step should be passed for successful run
    steps:
      # Checkout to the selected branch
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17.x'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          version: "3.19.0"
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze project source
        run: dart analyze

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> android/key.properties

      - name: Build release app bundle
#        run: flutter build appbundle
        run: flutter build apk --release

#      - name: Sign App Bundle
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: build/app/outputs/bundle/release/
#          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
#          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#
#          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: HipoGora
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}
          path: build/app/outputs/flutter-apk/app-release.apk